<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="438.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="421" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="421" > </text>
<g id="frames">
<g >
<title>mbedtls_gcm_auth_decrypt (399,871 samples, 6.93%)</title><rect x="1002.7" y="133" width="81.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1005.71" y="143.5" >mbedtls_g..</text>
</g>
<g >
<title>__do_fast_syscall_32 (152,882 samples, 2.65%)</title><rect x="360.6" y="261" width="31.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="363.62" y="271.5" >__..</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18,637 samples, 0.32%)</title><rect x="10.0" y="341" width="3.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (18,637 samples, 0.32%)</title><rect x="10.0" y="325" width="3.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>z_sys_init_run_level (146,584 samples, 2.54%)</title><rect x="1160.0" y="261" width="30.0" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1163.01" y="271.5" >z_..</text>
</g>
<g >
<title>generate_key_helper (373,318 samples, 6.47%)</title><rect x="391.9" y="245" width="76.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="394.90" y="255.5" >generate..</text>
</g>
<g >
<title>secure_storage_its_transform_from_store (399,871 samples, 6.93%)</title><rect x="1002.7" y="181" width="81.8" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1005.71" y="191.5" >secure_st..</text>
</g>
<g >
<title>__rcu_read_lock (82,263 samples, 1.43%)</title><rect x="289.8" y="181" width="16.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="292.79" y="191.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (48,114 samples, 0.83%)</title><rect x="13.8" y="117" width="9.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="16.81" y="127.5" ></text>
</g>
<g >
<title>rcu_core (49,390 samples, 0.86%)</title><rect x="23.7" y="133" width="10.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="26.66" y="143.5" ></text>
</g>
<g >
<title>native_write_msr (15,854 samples, 0.27%)</title><rect x="357.4" y="213" width="3.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="360.38" y="223.5" ></text>
</g>
<g >
<title>psa_cipher_setup.constprop.0 (361,510 samples, 6.27%)</title><rect x="698.1" y="213" width="74.0" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="701.10" y="223.5" >psa_ciph..</text>
</g>
<g >
<title>asm_int80_emulation (82,263 samples, 1.43%)</title><rect x="289.8" y="325" width="16.8" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="292.79" y="335.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (140,854 samples, 2.44%)</title><rect x="261.0" y="341" width="28.8" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="263.97" y="351.5" >as..</text>
</g>
<g >
<title>[unknown] (967,889 samples, 16.78%)</title><rect x="13.8" y="357" width="198.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="16.81" y="367.5" >[unknown]</text>
</g>
<g >
<title>mbedtls_aes_crypt_ctr (389,779 samples, 6.76%)</title><rect x="618.3" y="181" width="79.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="621.34" y="191.5" >mbedtls_a..</text>
</g>
<g >
<title>perf_event_exec (4,418 samples, 0.08%)</title><rect x="12.9" y="165" width="0.9" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="15.91" y="175.5" ></text>
</g>
<g >
<title>do_futex (152,882 samples, 2.65%)</title><rect x="360.6" y="213" width="31.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="363.62" y="223.5" >do..</text>
</g>
<g >
<title>ia32_sys_call (239,948 samples, 4.16%)</title><rect x="211.9" y="309" width="49.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="214.87" y="319.5" >ia32..</text>
</g>
<g >
<title>nsi_init (309,682 samples, 5.37%)</title><rect x="33.8" y="293" width="63.3" height="15.0" fill="rgb(251,214,51)" rx="2" ry="2" />
<text  x="36.77" y="303.5" >nsi_init</text>
</g>
<g >
<title>zephyr.exe (5,747,976 samples, 99.68%)</title><rect x="13.8" y="373" width="1176.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="16.81" y="383.5" >zephyr.exe</text>
</g>
<g >
<title>flash_native_options (309,682 samples, 5.37%)</title><rect x="33.8" y="229" width="63.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="36.77" y="239.5" >flash_..</text>
</g>
<g >
<title>__libc_start_call_main (309,682 samples, 5.37%)</title><rect x="33.8" y="325" width="63.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="36.77" y="335.5" >__libc..</text>
</g>
<g >
<title>handle_softirqs (49,390 samples, 0.86%)</title><rect x="23.7" y="165" width="10.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="26.66" y="175.5" ></text>
</g>
<g >
<title>psa_aead_crypt.constprop.0 (399,871 samples, 6.93%)</title><rect x="1002.7" y="165" width="81.8" height="15.0" fill="rgb(246,192,45)" rx="2" ry="2" />
<text  x="1005.71" y="175.5" >psa_aead_..</text>
</g>
<g >
<title>nsif_cpu0_pre_cmdline_hooks (309,682 samples, 5.37%)</title><rect x="33.8" y="261" width="63.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="36.77" y="271.5" >nsif_c..</text>
</g>
<g >
<title>schedule_tail (66,199 samples, 1.15%)</title><rect x="347.1" y="309" width="13.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="350.07" y="319.5" ></text>
</g>
<g >
<title>perf_ctx_enable (66,199 samples, 1.15%)</title><rect x="347.1" y="261" width="13.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="350.07" y="271.5" ></text>
</g>
<g >
<title>futex_wait_queue (152,882 samples, 2.65%)</title><rect x="360.6" y="165" width="31.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="363.62" y="175.5" >fu..</text>
</g>
<g >
<title>psa_generate_key (373,318 samples, 6.47%)</title><rect x="391.9" y="229" width="76.4" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="394.90" y="239.5" >psa_gene..</text>
</g>
<g >
<title>do_faccessat (48,114 samples, 0.83%)</title><rect x="13.8" y="213" width="9.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="16.81" y="223.5" ></text>
</g>
<g >
<title>exec_binprm (18,637 samples, 0.32%)</title><rect x="10.0" y="229" width="3.8" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>nvs_read (373,318 samples, 6.47%)</title><rect x="391.9" y="101" width="76.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="394.90" y="111.5" >nvs_read</text>
</g>
<g >
<title>handle_pte_fault (140,854 samples, 2.44%)</title><rect x="261.0" y="261" width="28.8" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="263.97" y="271.5" >ha..</text>
</g>
<g >
<title>swake_up_one (49,390 samples, 0.86%)</title><rect x="23.7" y="69" width="10.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="26.66" y="79.5" ></text>
</g>
<g >
<title>mbedtls_psa_aead_decrypt (399,871 samples, 6.93%)</title><rect x="1002.7" y="149" width="81.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1005.71" y="159.5" >mbedtls_p..</text>
</g>
<g >
<title>do_int80_emulation (48,114 samples, 0.83%)</title><rect x="13.8" y="261" width="9.9" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="16.81" y="271.5" ></text>
</g>
<g >
<title>rcu_gp_kthread_wake (49,390 samples, 0.86%)</title><rect x="23.7" y="101" width="10.1" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="26.66" y="111.5" ></text>
</g>
<g >
<title>mbedtls_cipher_update (389,779 samples, 6.76%)</title><rect x="618.3" y="197" width="79.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="621.34" y="207.5" >mbedtls_c..</text>
</g>
<g >
<title>_dl_init_paths (48,114 samples, 0.83%)</title><rect x="13.8" y="309" width="9.9" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="16.81" y="319.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (7,136 samples, 0.12%)</title><rect x="360.6" y="117" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="363.62" y="127.5" ></text>
</g>
<g >
<title>[[vdso]] (152,882 samples, 2.65%)</title><rect x="360.6" y="325" width="31.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="363.62" y="335.5" >[[..</text>
</g>
<g >
<title>main (3,384,847 samples, 58.70%)</title><rect x="391.9" y="261" width="692.6" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="394.90" y="271.5" >main</text>
</g>
<g >
<title>mbedtls_psa_cipher_update (389,779 samples, 6.76%)</title><rect x="618.3" y="213" width="79.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="621.34" y="223.5" >mbedtls_p..</text>
</g>
<g >
<title>do_filp_open (82,263 samples, 1.43%)</title><rect x="289.8" y="245" width="16.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="292.79" y="255.5" ></text>
</g>
<g >
<title>__random (778,796 samples, 13.51%)</title><rect x="843.3" y="165" width="159.4" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="846.35" y="175.5" >__random</text>
</g>
<g >
<title>do_fault (140,854 samples, 2.44%)</title><rect x="261.0" y="245" width="28.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="263.97" y="255.5" >do..</text>
</g>
<g >
<title>mbedtls_psa_external_get_random (1,127,115 samples, 19.55%)</title><rect x="772.1" y="213" width="230.6" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="775.07" y="223.5" >mbedtls_psa_external_get_random</text>
</g>
<g >
<title>bprm_execve (18,637 samples, 0.32%)</title><rect x="10.0" y="261" width="3.8" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (49,390 samples, 0.86%)</title><rect x="23.7" y="245" width="10.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="26.66" y="255.5" ></text>
</g>
<g >
<title>z_thread_entry (3,900,265 samples, 67.64%)</title><rect x="391.9" y="293" width="798.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="394.90" y="303.5" >z_thread_entry</text>
</g>
<g >
<title>run_native_tasks (309,682 samples, 5.37%)</title><rect x="33.8" y="245" width="63.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="36.77" y="255.5" >run_na..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (49,390 samples, 0.86%)</title><rect x="23.7" y="213" width="10.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="26.66" y="223.5" ></text>
</g>
<g >
<title>settings_nvs_save (373,318 samples, 6.47%)</title><rect x="391.9" y="117" width="76.4" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="394.90" y="127.5" >settings..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (18,637 samples, 0.32%)</title><rect x="10.0" y="277" width="3.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>__anon_vma_prepare (197,676 samples, 3.43%)</title><rect x="306.6" y="213" width="40.5" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="309.62" y="223.5" >__a..</text>
</g>
<g >
<title>try_to_wake_up (49,390 samples, 0.86%)</title><rect x="23.7" y="53" width="10.1" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="26.66" y="63.5" ></text>
</g>
<g >
<title>intel_pmu_nhm_enable_all (40,930 samples, 0.71%)</title><rect x="352.2" y="229" width="8.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="355.24" y="239.5" ></text>
</g>
<g >
<title>do_int80_emulation (82,263 samples, 1.43%)</title><rect x="289.8" y="309" width="16.8" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="292.79" y="319.5" ></text>
</g>
<g >
<title>psa_save_persistent_key (373,318 samples, 6.47%)</title><rect x="391.9" y="181" width="76.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="394.90" y="191.5" >psa_save..</text>
</g>
<g >
<title>_dl_important_hwcaps (48,114 samples, 0.83%)</title><rect x="13.8" y="293" width="9.9" height="15.0" fill="rgb(210,25,5)" rx="2" ry="2" />
<text  x="16.81" y="303.5" ></text>
</g>
<g >
<title>nvs_flash_rd (373,318 samples, 6.47%)</title><rect x="391.9" y="53" width="76.4" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="394.90" y="63.5" >nvs_flas..</text>
</g>
<g >
<title>psa_generate_random_internal (1,127,115 samples, 19.55%)</title><rect x="772.1" y="229" width="230.6" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="775.07" y="239.5" >psa_generate_random_internal</text>
</g>
<g >
<title>do_int80_emulation (239,948 samples, 4.16%)</title><rect x="211.9" y="325" width="49.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="214.87" y="335.5" >do_i..</text>
</g>
<g >
<title>__x64_sys_execve (18,637 samples, 0.32%)</title><rect x="10.0" y="293" width="3.8" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>psa_finish_key_creation.constprop.0 (373,318 samples, 6.47%)</title><rect x="391.9" y="197" width="76.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="394.90" y="207.5" >psa_fini..</text>
</g>
<g >
<title>mbedtls_psa_cipher_encrypt (1,484,543 samples, 25.74%)</title><rect x="468.3" y="229" width="303.8" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="471.29" y="239.5" >mbedtls_psa_cipher_encrypt</text>
</g>
<g >
<title>secure_storage_its_store_set (373,318 samples, 6.47%)</title><rect x="391.9" y="149" width="76.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="394.90" y="159.5" >secure_s..</text>
</g>
<g >
<title>psi_task_switch (145,746 samples, 2.53%)</title><rect x="362.1" y="117" width="29.8" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="365.08" y="127.5" >ps..</text>
</g>
<g >
<title>ctx_resched (4,418 samples, 0.08%)</title><rect x="12.9" y="133" width="0.9" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="15.91" y="143.5" ></text>
</g>
<g >
<title>nct_thread_starter (3,900,265 samples, 67.64%)</title><rect x="391.9" y="325" width="798.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="394.90" y="335.5" >nct_thread_starter</text>
</g>
<g >
<title>exc_page_fault (140,854 samples, 2.44%)</title><rect x="261.0" y="325" width="28.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="263.97" y="335.5" >ex..</text>
</g>
<g >
<title>perf-exec (18,637 samples, 0.32%)</title><rect x="10.0" y="373" width="3.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>bg_thread_main (3,900,265 samples, 67.64%)</title><rect x="391.9" y="277" width="798.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="394.90" y="287.5" >bg_thread_main</text>
</g>
<g >
<title>do_SYSENTER_32 (152,882 samples, 2.65%)</title><rect x="360.6" y="293" width="31.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="363.62" y="303.5" >do..</text>
</g>
<g >
<title>handle_mm_fault (197,676 samples, 3.43%)</title><rect x="306.6" y="277" width="40.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="309.62" y="287.5" >han..</text>
</g>
<g >
<title>__ia32_sys_access (48,114 samples, 0.83%)</title><rect x="13.8" y="229" width="9.9" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="16.81" y="239.5" ></text>
</g>
<g >
<title>clone3 (4,119,346 samples, 71.43%)</title><rect x="347.1" y="357" width="842.9" height="15.0" fill="rgb(216,54,12)" rx="2" ry="2" />
<text  x="350.07" y="367.5" >clone3</text>
</g>
<g >
<title>get_entry.constprop.0 (399,871 samples, 6.93%)</title><rect x="1002.7" y="197" width="81.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1005.71" y="207.5" >get_entry..</text>
</g>
<g >
<title>ia32_sys_call (48,114 samples, 0.83%)</title><rect x="13.8" y="245" width="9.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="16.81" y="255.5" ></text>
</g>
<g >
<title>perf_ctx_enable (4,418 samples, 0.08%)</title><rect x="12.9" y="117" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="15.91" y="127.5" ></text>
</g>
<g >
<title>memset (197,676 samples, 3.43%)</title><rect x="306.6" y="341" width="40.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="309.62" y="351.5" >mem..</text>
</g>
<g >
<title>user_path_at_empty (48,114 samples, 0.83%)</title><rect x="13.8" y="197" width="9.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="16.81" y="207.5" ></text>
</g>
<g >
<title>do_user_addr_fault (197,676 samples, 3.43%)</title><rect x="306.6" y="293" width="40.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="309.62" y="303.5" >do_..</text>
</g>
<g >
<title>exc_page_fault (49,390 samples, 0.86%)</title><rect x="23.7" y="293" width="10.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="26.66" y="303.5" ></text>
</g>
<g >
<title>load_elf_binary (18,637 samples, 0.32%)</title><rect x="10.0" y="197" width="3.8" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (197,676 samples, 3.43%)</title><rect x="306.6" y="325" width="40.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="309.62" y="335.5" >asm..</text>
</g>
<g >
<title>schedule (152,882 samples, 2.65%)</title><rect x="360.6" y="149" width="31.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="363.62" y="159.5" >sc..</text>
</g>
<g >
<title>rcu_accelerate_cbs_unlocked (49,390 samples, 0.86%)</title><rect x="23.7" y="117" width="10.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="26.66" y="127.5" ></text>
</g>
<g >
<title>do_read_fault (140,854 samples, 2.44%)</title><rect x="261.0" y="229" width="28.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="263.97" y="239.5" >do..</text>
</g>
<g >
<title>do_user_addr_fault (140,854 samples, 2.44%)</title><rect x="261.0" y="309" width="28.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="263.97" y="319.5" >do..</text>
</g>
<g >
<title>x86_pmu_enable (7,136 samples, 0.12%)</title><rect x="360.6" y="69" width="1.5" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="363.62" y="79.5" ></text>
</g>
<g >
<title>__handle_mm_fault (140,854 samples, 2.44%)</title><rect x="261.0" y="277" width="28.8" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="263.97" y="287.5" >__..</text>
</g>
<g >
<title>exc_page_fault (197,676 samples, 3.43%)</title><rect x="306.6" y="309" width="40.5" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="309.62" y="319.5" >exc..</text>
</g>
<g >
<title>mbedtls_gcm_crypt_and_tag (399,871 samples, 6.93%)</title><rect x="1002.7" y="117" width="81.8" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1005.71" y="127.5" >mbedtls_g..</text>
</g>
<g >
<title>kmem_cache_alloc (82,263 samples, 1.43%)</title><rect x="289.8" y="197" width="16.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="292.79" y="207.5" ></text>
</g>
<g >
<title>_dl_map_object (279,939 samples, 4.85%)</title><rect x="289.8" y="357" width="57.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="292.79" y="367.5" >_dl_ma..</text>
</g>
<g >
<title>[unknown] (870,385 samples, 15.09%)</title><rect x="33.8" y="341" width="178.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="36.77" y="351.5" >[unknown]</text>
</g>
<g >
<title>nvs_read_hist (373,318 samples, 6.47%)</title><rect x="391.9" y="85" width="76.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="394.90" y="95.5" >nvs_read..</text>
</g>
<g >
<title>nsif_cpun_pre_cmdline_hooks (309,682 samples, 5.37%)</title><rect x="33.8" y="277" width="63.3" height="15.0" fill="rgb(207,12,2)" rx="2" ry="2" />
<text  x="36.77" y="287.5" >nsif_c..</text>
</g>
<g >
<title>__ia32_compat_sys_openat (82,263 samples, 1.43%)</title><rect x="289.8" y="277" width="16.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="292.79" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (140,854 samples, 2.44%)</title><rect x="261.0" y="293" width="28.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="263.97" y="303.5" >ha..</text>
</g>
<g >
<title>alloc_empty_file (82,263 samples, 1.43%)</title><rect x="289.8" y="213" width="16.8" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="292.79" y="223.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (66,199 samples, 1.15%)</title><rect x="347.1" y="277" width="13.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="350.07" y="287.5" ></text>
</g>
<g >
<title>asm_int80_emulation (48,114 samples, 0.83%)</title><rect x="13.8" y="277" width="9.9" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="16.81" y="287.5" ></text>
</g>
<g >
<title>psa_cipher_encrypt (2,611,658 samples, 45.29%)</title><rect x="468.3" y="245" width="534.4" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="471.29" y="255.5" >psa_cipher_encrypt</text>
</g>
<g >
<title>search_binary_handler (18,637 samples, 0.32%)</title><rect x="10.0" y="213" width="3.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>z_impl_k_thread_abort (3,900,265 samples, 67.64%)</title><rect x="391.9" y="309" width="798.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="394.90" y="319.5" >z_impl_k_thread_abort</text>
</g>
<g >
<title>ret_from_fork_asm (66,199 samples, 1.15%)</title><rect x="347.1" y="341" width="13.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="350.07" y="351.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (7,136 samples, 0.12%)</title><rect x="360.6" y="101" width="1.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="363.62" y="111.5" ></text>
</g>
<g >
<title>nvs_prev_ate (373,318 samples, 6.47%)</title><rect x="391.9" y="69" width="76.4" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="394.90" y="79.5" >nvs_prev..</text>
</g>
<g >
<title>security_vm_enough_memory_mm (239,948 samples, 4.16%)</title><rect x="211.9" y="229" width="49.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="214.87" y="239.5" >secu..</text>
</g>
<g >
<title>__schedule (152,882 samples, 2.65%)</title><rect x="360.6" y="133" width="31.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="363.62" y="143.5" >__..</text>
</g>
<g >
<title>psa_destroy_key (399,871 samples, 6.93%)</title><rect x="1002.7" y="245" width="81.8" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1005.71" y="255.5" >psa_destr..</text>
</g>
<g >
<title>bprm_execve.part.0 (18,637 samples, 0.32%)</title><rect x="10.0" y="245" width="3.8" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>intel_pmu_nhm_enable_all (4,418 samples, 0.08%)</title><rect x="12.9" y="85" width="0.9" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="15.91" y="95.5" ></text>
</g>
<g >
<title>all (5,766,613 samples, 100%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>swake_up_one_online (49,390 samples, 0.86%)</title><rect x="23.7" y="85" width="10.1" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="26.66" y="95.5" ></text>
</g>
<g >
<title>__memcpy_sse2_unaligned (309,682 samples, 5.37%)</title><rect x="33.8" y="213" width="63.3" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="36.77" y="223.5" >__memc..</text>
</g>
<g >
<title>handle_pte_fault (197,676 samples, 3.43%)</title><rect x="306.6" y="245" width="40.5" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="309.62" y="255.5" >han..</text>
</g>
<g >
<title>do_mmap (239,948 samples, 4.16%)</title><rect x="211.9" y="245" width="49.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="214.87" y="255.5" >do_m..</text>
</g>
<g >
<title>perf_event_enable_on_exec (4,418 samples, 0.08%)</title><rect x="12.9" y="149" width="0.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="15.91" y="159.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (49,390 samples, 0.86%)</title><rect x="23.7" y="181" width="10.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="26.66" y="191.5" ></text>
</g>
<g >
<title>x86_pmu_enable (40,930 samples, 0.71%)</title><rect x="352.2" y="245" width="8.4" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="355.24" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (49,390 samples, 0.86%)</title><rect x="23.7" y="309" width="10.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="26.66" y="319.5" ></text>
</g>
<g >
<title>entry_SYSENTER_compat_after_hwframe (152,882 samples, 2.65%)</title><rect x="360.6" y="309" width="31.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="363.62" y="319.5" >en..</text>
</g>
<g >
<title>walk_component (48,114 samples, 0.83%)</title><rect x="13.8" y="149" width="9.9" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="16.81" y="159.5" ></text>
</g>
<g >
<title>mbedtls_aes_setkey_enc (361,510 samples, 6.27%)</title><rect x="698.1" y="197" width="74.0" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="701.10" y="207.5" >mbedtls_..</text>
</g>
<g >
<title>x64_sys_call (18,637 samples, 0.32%)</title><rect x="10.0" y="309" width="3.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>lookup_fast (48,114 samples, 0.83%)</title><rect x="13.8" y="133" width="9.9" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="16.81" y="143.5" ></text>
</g>
<g >
<title>finish_task_switch.isra.0 (66,199 samples, 1.15%)</title><rect x="347.1" y="293" width="13.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="350.07" y="303.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (239,948 samples, 4.16%)</title><rect x="211.9" y="261" width="49.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="214.87" y="271.5" >vm_m..</text>
</g>
<g >
<title>__GI___open64_nocancel (82,263 samples, 1.43%)</title><rect x="289.8" y="341" width="16.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="292.79" y="351.5" ></text>
</g>
<g >
<title>intel_pmu_nhm_enable_all (1,706 samples, 0.03%)</title><rect x="361.7" y="53" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="364.73" y="63.5" ></text>
</g>
<g >
<title>native_write_msr (1,706 samples, 0.03%)</title><rect x="361.7" y="37" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="364.73" y="47.5" ></text>
</g>
<g >
<title>flash_init (146,584 samples, 2.54%)</title><rect x="1160.0" y="229" width="30.0" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="1163.01" y="239.5" >fl..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (49,390 samples, 0.86%)</title><rect x="23.7" y="229" width="10.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="26.66" y="239.5" ></text>
</g>
<g >
<title>asm_int80_emulation (239,948 samples, 4.16%)</title><rect x="211.9" y="341" width="49.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="214.87" y="351.5" >asm_..</text>
</g>
<g >
<title>secure_storage_its_remove (399,871 samples, 6.93%)</title><rect x="1002.7" y="213" width="81.8" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1005.71" y="223.5" >secure_st..</text>
</g>
<g >
<title>mbedtls_psa_cipher_abort (353,054 samples, 6.12%)</title><rect x="468.3" y="213" width="72.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="471.29" y="223.5" >mbedtls_..</text>
</g>
<g >
<title>__ia32_sys_futex_time32 (152,882 samples, 2.65%)</title><rect x="360.6" y="229" width="31.3" height="15.0" fill="rgb(241,170,40)" rx="2" ry="2" />
<text  x="363.62" y="239.5" >__..</text>
</g>
<g >
<title>path_lookupat (48,114 samples, 0.83%)</title><rect x="13.8" y="165" width="9.9" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="16.81" y="175.5" ></text>
</g>
<g >
<title>filename_lookup (48,114 samples, 0.83%)</title><rect x="13.8" y="181" width="9.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="16.81" y="191.5" ></text>
</g>
<g >
<title>do_device_init (146,584 samples, 2.54%)</title><rect x="1160.0" y="245" width="30.0" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1163.01" y="255.5" >do..</text>
</g>
<g >
<title>secure_storage_its_set (373,318 samples, 6.47%)</title><rect x="391.9" y="165" width="76.4" height="15.0" fill="rgb(237,149,35)" rx="2" ry="2" />
<text  x="394.90" y="175.5" >secure_s..</text>
</g>
<g >
<title>_raw_spin_lock_irqsave (14,219 samples, 0.25%)</title><rect x="10.0" y="165" width="2.9" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>__futex_wait (152,882 samples, 2.65%)</title><rect x="360.6" y="181" width="31.3" height="15.0" fill="rgb(207,12,3)" rx="2" ry="2" />
<text  x="363.62" y="191.5" >__..</text>
</g>
<g >
<title>__handle_mm_fault (197,676 samples, 3.43%)</title><rect x="306.6" y="261" width="40.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="309.62" y="271.5" >__h..</text>
</g>
<g >
<title>irq_exit_rcu (49,390 samples, 0.86%)</title><rect x="23.7" y="197" width="10.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="26.66" y="207.5" ></text>
</g>
<g >
<title>psi_group_change (145,746 samples, 2.53%)</title><rect x="362.1" y="101" width="29.8" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="365.08" y="111.5" >ps..</text>
</g>
<g >
<title>start_thread (4,053,147 samples, 70.29%)</title><rect x="360.6" y="341" width="829.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="363.62" y="351.5" >start_thread</text>
</g>
<g >
<title>do_fault (197,676 samples, 3.43%)</title><rect x="306.6" y="229" width="40.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="309.62" y="239.5" >do_..</text>
</g>
<g >
<title>__intel_pmu_enable_all.constprop.0 (25,076 samples, 0.43%)</title><rect x="352.2" y="213" width="5.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="355.24" y="223.5" ></text>
</g>
<g >
<title>perf_ctx_enable (7,136 samples, 0.12%)</title><rect x="360.6" y="85" width="1.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="363.62" y="95.5" ></text>
</g>
<g >
<title>settings_save_one (373,318 samples, 6.47%)</title><rect x="391.9" y="133" width="76.4" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="394.90" y="143.5" >settings..</text>
</g>
<g >
<title>flash_sim_read (373,318 samples, 6.47%)</title><rect x="391.9" y="37" width="76.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="394.90" y="47.5" >flash_si..</text>
</g>
<g >
<title>rcu_core_si (49,390 samples, 0.86%)</title><rect x="23.7" y="149" width="10.1" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="26.66" y="159.5" ></text>
</g>
<g >
<title>do_sys_openat2 (82,263 samples, 1.43%)</title><rect x="289.8" y="261" width="16.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="292.79" y="271.5" ></text>
</g>
<g >
<title>[unknown] (18,637 samples, 0.32%)</title><rect x="10.0" y="357" width="3.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>handle_mm_fault (49,390 samples, 0.86%)</title><rect x="23.7" y="261" width="10.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="26.66" y="271.5" ></text>
</g>
<g >
<title>mbedtls_cipher_free (353,054 samples, 6.12%)</title><rect x="468.3" y="197" width="72.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="471.29" y="207.5" >mbedtls_..</text>
</g>
<g >
<title>z_impl_sys_csrand_get (1,127,115 samples, 19.55%)</title><rect x="772.1" y="197" width="230.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="775.07" y="207.5" >z_impl_sys_csrand_get</text>
</g>
<g >
<title>do_lookup_x (560,703 samples, 9.72%)</title><rect x="97.1" y="325" width="114.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="100.13" y="335.5" >do_lookup_x</text>
</g>
<g >
<title>main (309,682 samples, 5.37%)</title><rect x="33.8" y="309" width="63.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="36.77" y="319.5" >main</text>
</g>
<g >
<title>ia32_sys_call (82,263 samples, 1.43%)</title><rect x="289.8" y="293" width="16.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="292.79" y="303.5" ></text>
</g>
<g >
<title>__libc_do_syscall (239,948 samples, 4.16%)</title><rect x="211.9" y="357" width="49.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="214.87" y="367.5" >__li..</text>
</g>
<g >
<title>psa_destroy_persistent_key (399,871 samples, 6.93%)</title><rect x="1002.7" y="229" width="81.8" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1005.71" y="239.5" >psa_destr..</text>
</g>
<g >
<title>_dl_cache_libcmp (140,854 samples, 2.44%)</title><rect x="261.0" y="357" width="28.8" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="263.97" y="367.5" >_d..</text>
</g>
<g >
<title>do_fast_syscall_32 (152,882 samples, 2.65%)</title><rect x="360.6" y="277" width="31.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="363.62" y="287.5" >do..</text>
</g>
<g >
<title>do_user_addr_fault (49,390 samples, 0.86%)</title><rect x="23.7" y="277" width="10.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="26.66" y="287.5" ></text>
</g>
<g >
<title>__ia32_sys_mmap_pgoff (239,948 samples, 4.16%)</title><rect x="211.9" y="293" width="49.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="214.87" y="303.5" >__ia..</text>
</g>
<g >
<title>__memset_ia32 (353,054 samples, 6.12%)</title><rect x="468.3" y="181" width="72.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="471.29" y="191.5" >__memset..</text>
</g>
<g >
<title>ksys_mmap_pgoff (239,948 samples, 4.16%)</title><rect x="211.9" y="277" width="49.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="214.87" y="287.5" >ksys..</text>
</g>
<g >
<title>psa_generate_key_custom (373,318 samples, 6.47%)</title><rect x="391.9" y="213" width="76.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="394.90" y="223.5" >psa_gene..</text>
</g>
<g >
<title>native_write_msr (4,418 samples, 0.08%)</title><rect x="12.9" y="69" width="0.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="15.91" y="79.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4,418 samples, 0.08%)</title><rect x="12.9" y="101" width="0.9" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="15.91" y="111.5" ></text>
</g>
<g >
<title>.L248 (97,504 samples, 1.69%)</title><rect x="13.8" y="341" width="20.0" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="16.81" y="351.5" ></text>
</g>
<g >
<title>ret_from_fork (66,199 samples, 1.15%)</title><rect x="347.1" y="325" width="13.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="350.07" y="335.5" ></text>
</g>
<g >
<title>psa_cipher_encrypt (368,834 samples, 6.40%)</title><rect x="1084.5" y="261" width="75.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="1087.53" y="271.5" >psa_ciph..</text>
</g>
<g >
<title>begin_new_exec (18,637 samples, 0.32%)</title><rect x="10.0" y="181" width="3.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>.L504 (97,504 samples, 1.69%)</title><rect x="13.8" y="325" width="20.0" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="16.81" y="335.5" ></text>
</g>
<g >
<title>entropy_native_posix_get_entropy (1,127,115 samples, 19.55%)</title><rect x="772.1" y="181" width="230.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="775.07" y="191.5" >entropy_native_posix_get_entropy</text>
</g>
<g >
<title>mbedtls_psa_cipher_finish (380,200 samples, 6.59%)</title><rect x="540.5" y="213" width="77.8" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="543.54" y="223.5" >mbedtls_..</text>
</g>
<g >
<title>futex_wait (152,882 samples, 2.65%)</title><rect x="360.6" y="197" width="31.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="363.62" y="207.5" >fu..</text>
</g>
<g >
<title>ia32_sys_call (152,882 samples, 2.65%)</title><rect x="360.6" y="245" width="31.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="363.62" y="255.5" >ia..</text>
</g>
<g >
<title>path_openat (82,263 samples, 1.43%)</title><rect x="289.8" y="229" width="16.8" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="292.79" y="239.5" ></text>
</g>
</g>
</svg>
